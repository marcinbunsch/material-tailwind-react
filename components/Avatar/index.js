function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}import React from"react";import PropTypes from"prop-types";import classnames from"classnames";import{twMerge}from"tailwind-merge";import findMatch from"../../utils/findMatch";import objectsToString from"../../utils/objectsToString";import{useTheme}from"../../context/theme";import{propTypesVariant,propTypesSize,propTypesClassName,propTypesColor,propTypesWithBorder}from"../../types/components/avatar";export var Avatar=React.forwardRef(function(_param,ref){var variant=_param.variant,size=_param.size,className=_param.className,color=_param.color,withBorder=_param.withBorder,rest=_objectWithoutProperties(_param,["variant","size","className","color","withBorder"]);var avatar=useTheme().avatar;var valid=avatar.valid,defaultProps=avatar.defaultProps,styles=avatar.styles;var base=styles.base,variants=styles.variants,sizes=styles.sizes,borderColor=styles.borderColor;variant=variant!==null&&variant!==void 0?variant:defaultProps.variant;size=size!==null&&size!==void 0?size:defaultProps.size;withBorder=withBorder!==null&&withBorder!==void 0?withBorder:defaultProps.withBorder;color=color!==null&&color!==void 0?color:defaultProps.color;className=twMerge(defaultProps.className||"",className);var avatarVariant=objectsToString(variants[findMatch(valid.variants,variant,"rounded")]);var avatarSize=objectsToString(sizes[findMatch(valid.sizes,size,"md")]);var avatarBorderColor=objectsToString(borderColor[findMatch(valid.colors,color,"gray")]);var _obj;var classes=twMerge(classnames(objectsToString(base.initial),avatarVariant,avatarSize,(_obj={},_defineProperty(_obj,objectsToString(base.withBorder),withBorder),_defineProperty(_obj,avatarBorderColor,withBorder),_obj)),className);return React.createElement("img",_extends({},rest,{ref:ref,className:classes}))});Avatar.propTypes={variant:PropTypes.oneOf(propTypesVariant),size:PropTypes.oneOf(propTypesSize),className:propTypesClassName,withBorder:propTypesWithBorder,color:PropTypes.oneOf(propTypesColor)};Avatar.displayName="MaterialTailwind.Avatar";export default Avatar;
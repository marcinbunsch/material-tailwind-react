function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}import React from"react";import classnames from"classnames";import{twMerge}from"tailwind-merge";import objectsToString from"../../utils/objectsToString";import{useTheme}from"../../context/theme";import{TabsContextProvider,useTabs}from"./TabsContext";import{Tab}from"./Tab";import{TabsBody}from"./TabsBody";import{TabsHeader}from"./TabsHeader";import{TabPanel}from"./TabPanel";import{propTypesId,propTypesValue,propTypesClassName,propTypesOrientation,propTypesChildren}from"../../types/components/tabs";var Tabs=React.forwardRef(function(_param,ref){var value=_param.value,className=_param.className,orientation=_param.orientation,children=_param.children,rest=_objectWithoutProperties(_param,["value","className","orientation","children"]);var tabs=useTheme().tabs;var defaultProps=tabs.defaultProps,styles=tabs.styles;var tabsId=React.useId();orientation=orientation!==null&&orientation!==void 0?orientation:defaultProps.orientation;className=twMerge(defaultProps.className||"",className);var tabsClasses=twMerge(classnames(objectsToString(styles.base),_defineProperty({},styles[orientation]&&objectsToString(styles[orientation]),orientation)),className);return React.createElement(TabsContextProvider,{id:tabsId,value:value,orientation:orientation},React.createElement("div",_extends({},rest,{ref:ref,className:tabsClasses}),children))});Tabs.propTypes={id:propTypesId,value:propTypesValue,className:propTypesClassName,orientation:propTypesOrientation,children:propTypesChildren};Tabs.displayName="MaterialTailwind.Tabs";export{Tabs,Tab,TabsBody,TabsHeader,TabPanel,useTabs};export default Object.assign(Tabs,{Tab:Tab,Body:TabsBody,Header:TabsHeader,Panel:TabPanel});
function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}import React from"react";import PropTypes from"prop-types";import classnames from"classnames";import{twMerge}from"tailwind-merge";import findMatch from"../../utils/findMatch";import objectsToString from"../../utils/objectsToString";import{useTheme}from"../../context/theme";import{propTypesVariant,propTypesColor,propTypesShadow,propTypesFloated,propTypesClassName,propTypesChildren}from"../../types/components/card";export var CardHeader=React.forwardRef(function(_param,ref){var variant=_param.variant,color=_param.color,shadow=_param.shadow,floated=_param.floated,className=_param.className,children=_param.children,rest=_objectWithoutProperties(_param,["variant","color","shadow","floated","className","children"]);var cardHeader=useTheme().cardHeader;var defaultProps=cardHeader.defaultProps,styles=cardHeader.styles,valid=cardHeader.valid;var base=styles.base,variants=styles.variants;variant=variant!==null&&variant!==void 0?variant:defaultProps.variant;color=color!==null&&color!==void 0?color:defaultProps.color;shadow=shadow!==null&&shadow!==void 0?shadow:defaultProps.shadow;floated=floated!==null&&floated!==void 0?floated:defaultProps.floated;className=twMerge(defaultProps.className||"",className);var cardHeaderRoot=objectsToString(base.initial);var cardHeaderVariant=objectsToString(variants[findMatch(valid.variants,variant,"filled")][findMatch(valid.colors,color,"white")]);var classes=twMerge(classnames(cardHeaderRoot,cardHeaderVariant,_defineProperty({},objectsToString(base.shadow),shadow),_defineProperty({},objectsToString(base.floated),floated)),className);return React.createElement("div",_extends({},rest,{ref:ref,className:classes}),children)});CardHeader.propTypes={variant:PropTypes.oneOf(propTypesVariant),color:PropTypes.oneOf(propTypesColor),shadow:propTypesShadow,floated:propTypesFloated,className:propTypesClassName,children:propTypesChildren};CardHeader.displayName="MaterialTailwind.CardHeader";export default CardHeader;
function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}import React from"react";import{useTheme}from"../../context/theme";import Ripple from"material-ripple-effects";import classnames from"classnames";import{twMerge}from"tailwind-merge";import objectsToString from"../../utils/objectsToString";import{propTypesClassName,propTypesDisabled,propTypesRipple,propTypesSelected,propTypesChildren}from"../../types/components/list";import{ListItemPrefix}from"./ListItemPrefix";import{ListItemSuffix}from"./ListItemSuffix";export var ListItem=React.forwardRef(function(_param,ref){var className=_param.className,disabled=_param.disabled,selected=_param.selected,ripple=_param.ripple,children=_param.children,rest=_objectWithoutProperties(_param,["className","disabled","selected","ripple","children"]);var list=useTheme().list;var defaultProps=list.defaultProps,base=list.styles.base;ripple=ripple!==null&&ripple!==void 0?ripple:defaultProps.ripple;var rippleEffect=ripple!==undefined&&new Ripple;var _obj;var listItemClasses=twMerge(classnames(objectsToString(base.item.initial),(_obj={},_defineProperty(_obj,objectsToString(base.item.disabled),disabled),_defineProperty(_obj,objectsToString(base.item.selected),selected&&!disabled),_obj)),className);return React.createElement("div",_extends({},rest,{ref:ref,role:"button",tabIndex:0,className:listItemClasses,onMouseDown:function(e){var onMouseDown=rest===null||rest===void 0?void 0:rest.onMouseDown;if(ripple)rippleEffect.create(e,"dark");return typeof onMouseDown==="function"&&onMouseDown(e)}}),children)});ListItem.propTypes={className:propTypesClassName,selected:propTypesSelected,disabled:propTypesDisabled,ripple:propTypesRipple,children:propTypesChildren};ListItem.displayName="MaterialTailwind.ListItem";export{ListItemPrefix,ListItemSuffix};export default Object.assign(ListItem,{Prefix:ListItemPrefix,Suffix:ListItemSuffix});
function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _iterableToArrayLimit(arr,i){var _i=arr==null?null:typeof Symbol!=="undefined"&&arr[Symbol.iterator]||arr["@@iterator"];if(_i==null)return;var _arr=[];var _n=true;var _d=false;var _s,_e;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i["return"]!=null)_i["return"]()}finally{if(_d)throw _e}}return _arr}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest()}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(n);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}import React from"react";import PropTypes from"prop-types";import merge from"deepmerge";import classnames from"classnames";import{twMerge}from"tailwind-merge";import findMatch from"../../utils/findMatch";import objectsToString from"../../utils/objectsToString";import{useTheme}from"../../context/theme";import{propTypesColor,propTypesSize,propTypesClassName,propTypesTrackClassName,propTypesThumbClassName,propTypesBarClassName,propTypesValue,propTypesDefaultValue,propTypesOnChange,propTypesMin,propTypesMax,propTypesStep,propTypesInputRef,propTypesInputProps}from"../../types/components/slider";export var Slider=React.forwardRef(function(_param,ref){var color=_param.color,size=_param.size,className=_param.className,trackClassName=_param.trackClassName,thumbClassName=_param.thumbClassName,barClassName=_param.barClassName,value=_param.value,defaultValue=_param.defaultValue,onChange=_param.onChange,min=_param.min,max=_param.max,step=_param.step,inputRef=_param.inputRef,inputProps=_param.inputProps,rest=_objectWithoutProperties(_param,["color","size","className","trackClassName","thumbClassName","barClassName","value","defaultValue","onChange","min","max","step","inputRef","inputProps"]);var slider=useTheme().slider;var valid=slider.valid,defaultProps=slider.defaultProps,styles=slider.styles;var base=styles.base,sizes=styles.sizes,colors=styles.colors;var _React_useState=_slicedToArray(React.useState(defaultValue||0),2),innerValue=_React_useState[0],setInnerValue=_React_useState[1];React.useMemo(function(){if(defaultValue)setInnerValue(defaultValue)},[defaultValue]);color=color!==null&&color!==void 0?color:defaultProps.color;size=size!==null&&size!==void 0?size:defaultProps.size;min=min!==null&&min!==void 0?min:defaultProps.min;max=max!==null&&max!==void 0?max:defaultProps.max;step=step!==null&&step!==void 0?step:defaultProps.step;className=twMerge(defaultProps.className||"",className);var _classnames;thumbClassName=(_classnames=classnames(defaultProps.thumbClassName,thumbClassName))!==null&&_classnames!==void 0?_classnames:defaultProps.thumbClassName;var _classnames1;trackClassName=(_classnames1=classnames(defaultProps.trackClassName,trackClassName))!==null&&_classnames1!==void 0?_classnames1:defaultProps.trackClassName;var _classnames2;barClassName=(_classnames2=classnames(defaultProps.barClassName,barClassName))!==null&&_classnames2!==void 0?_classnames2:defaultProps.barClassName;var _merge;inputProps=(_merge=merge(inputProps,(defaultProps===null||defaultProps===void 0?void 0:defaultProps.inputProps)||{}))!==null&&_merge!==void 0?_merge:defaultProps.inputProps;var sliderContainerClasses=twMerge(classnames(objectsToString(base.container),objectsToString(colors[findMatch(valid.colors,color,"gray")]),objectsToString(sizes[findMatch(valid.sizes,size,"md")]["container"]),className));var sliderBarClasses=twMerge(classnames(objectsToString(base.bar),barClassName));var sliderTrackClasses=classnames(objectsToString(base.track),objectsToString(sizes[findMatch(valid.sizes,size,"md")]["track"]));var sliderThumbClasses=classnames(objectsToString(base.thumb),objectsToString(sizes[findMatch(valid.sizes,size,"md")]["thumb"]));var sliderClasses=classnames(objectsToString(base.slider),twMerge(sliderTrackClasses,trackClassName),twMerge(sliderThumbClasses,thumbClassName));return React.createElement("div",_extends({},rest,{ref:ref,className:sliderContainerClasses}),React.createElement("label",{className:sliderBarClasses,style:{width:"".concat(value||innerValue,"%")}}),React.createElement("input",_extends({ref:inputRef,type:"range",max:max,min:min,step:step,className:sliderClasses},value?{value:value}:null,{defaultValue:defaultValue,onChange:function(e){return onChange?onChange(e):setInnerValue(Number(e.target.value))}})))});Slider.propTypes={color:PropTypes.oneOf(propTypesColor),size:PropTypes.oneOf(propTypesSize),className:propTypesClassName,trackClassName:propTypesTrackClassName,thumbClassName:propTypesThumbClassName,barClassName:propTypesBarClassName,defaultValue:propTypesDefaultValue,value:propTypesValue,onChange:propTypesOnChange,min:propTypesMin,max:propTypesMax,step:propTypesStep,inputRef:propTypesInputRef,inputProps:propTypesInputProps};Slider.displayName="MaterialTailwind.Slider";export default Slider;
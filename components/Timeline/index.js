function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}import React from"react";import{twMerge}from"tailwind-merge";import objectsToString from"../../utils/objectsToString";import{useTheme}from"../../context/theme";import{propTypeClassName,propTypeChildren}from"../../types/components/timeline";import TimelineItem from"./TimelineItem";import TimelineIcon from"./TimelineIcon";import TimelineBody from"./TimelineBody";import TimelineHeader from"./TimelineHeader";import TimelineConnector from"./TimelineConnector";export var Timeline=React.forwardRef(function(_param,ref){var className=_param.className,children=_param.children,rest=_objectWithoutProperties(_param,["className","children"]);var timeline=useTheme().timeline;var styles=timeline.styles;var base=styles.base;var classes=twMerge(objectsToString(base),className);return React.createElement("ul",_extends({ref:ref},rest,{className:classes}),children)});Timeline.propTypes={className:propTypeClassName,children:propTypeChildren};Timeline.displayName="MaterialTailwind.Timeline";export{TimelineItem,TimelineIcon,TimelineBody,TimelineHeader,TimelineConnector};export default Object.assign(Timeline,{Item:TimelineItem,Icon:TimelineIcon,Header:TimelineHeader,Body:TimelineBody,Connector:TimelineConnector});
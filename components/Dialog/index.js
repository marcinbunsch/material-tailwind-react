function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};var ownKeys=Object.keys(source);if(typeof Object.getOwnPropertySymbols==="function"){ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))}ownKeys.forEach(function(key){_defineProperty(target,key,source[key])})}return target}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})}keys.push.apply(keys,symbols)}return keys}function _objectSpreadProps(target,source){source=source!=null?source:{};if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source))}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}return target}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}import React from"react";import PropTypes from"prop-types";import{useFloating,useInteractions,useClick,useRole,useDismiss,useId,FloatingPortal,FloatingOverlay,FloatingFocusManager,useMergeRefs}from"@floating-ui/react";import{AnimatePresence,m,domAnimation,LazyMotion}from"framer-motion";import classnames from"classnames";import merge from"deepmerge";import{twMerge}from"tailwind-merge";import findMatch from"../../utils/findMatch";import objectsToString from"../../utils/objectsToString";import{useTheme}from"../../context/theme";import{propTypesOpen,propTypesHandler,propTypesSize,propTypesDismiss,propTypesAnimate,propTypesClassName,propTypesChildren}from"../../types/components/dialog";import{DialogHeader}from"./DialogHeader";import{DialogBody}from"./DialogBody";import{DialogFooter}from"./DialogFooter";var Dialog=React.forwardRef(function(_param,ref){var open=_param.open,handler=_param.handler,size=_param.size,dismiss=_param.dismiss,animate=_param.animate,className=_param.className,children=_param.children,rest=_objectWithoutProperties(_param,["open","handler","size","dismiss","animate","className","children"]);var dialog=useTheme().dialog;var defaultProps=dialog.defaultProps,valid=dialog.valid,_dialog_styles=dialog.styles,base=_dialog_styles.base,sizes=_dialog_styles.sizes;handler=handler!==null&&handler!==void 0?handler:undefined;size=size!==null&&size!==void 0?size:defaultProps.size;dismiss=dismiss!==null&&dismiss!==void 0?dismiss:defaultProps.dismiss;animate=animate!==null&&animate!==void 0?animate:defaultProps.animate;className=twMerge(defaultProps.className||"",className);var backdropClasses=classnames(objectsToString(base.backdrop));var dialogClasses=twMerge(classnames(objectsToString(base.container),objectsToString(sizes[findMatch(valid.sizes,size,"md")])),className);var animation={unmount:{opacity:0,y:-50,transition:{duration:.3}},mount:{opacity:1,y:0,transition:{duration:.3}}};var backdropAnimation={unmount:{opacity:0,transition:{delay:.2}},mount:{opacity:1}};var appliedAnimation=merge(animation,animate);var _useFloating=useFloating({open:open,onOpenChange:handler}),floating=_useFloating.floating,context=_useFloating.context;var id=useId();var labelId="".concat(id,"-label");var descriptionId="".concat(id,"-description");var getFloatingProps=useInteractions([useClick(context),useRole(context),useDismiss(context,dismiss)]).getFloatingProps;var mergedRef=useMergeRefs([ref,floating]);var NewAnimatePresence=AnimatePresence;return React.createElement(LazyMotion,{features:domAnimation},React.createElement(FloatingPortal,null,React.createElement(NewAnimatePresence,null,open&&React.createElement(FloatingOverlay,{style:{zIndex:9999},lockScroll:true},React.createElement(FloatingFocusManager,{context:context},React.createElement(m.div,{className:size==="xxl"?"":backdropClasses,initial:"unmount",exit:"unmount",animate:open?"mount":"unmount",variants:backdropAnimation,transition:{duration:.2}},React.createElement(m.div,_extends({},getFloatingProps(_objectSpreadProps(_objectSpread({},rest),{ref:mergedRef,className:dialogClasses,"aria-labelledby":labelId,"aria-describedby":descriptionId})),{initial:"unmount",exit:"unmount",animate:open?"mount":"unmount",variants:appliedAnimation}),children)))))))});Dialog.propTypes={open:propTypesOpen,handler:propTypesHandler,size:PropTypes.oneOf(propTypesSize),dismiss:propTypesDismiss,animate:propTypesAnimate,className:propTypesClassName,children:propTypesChildren};Dialog.displayName="MaterialTailwind.Dialog";export{Dialog,DialogHeader,DialogBody,DialogFooter};export default Object.assign(Dialog,{Header:DialogHeader,Body:DialogBody,Footer:DialogFooter});
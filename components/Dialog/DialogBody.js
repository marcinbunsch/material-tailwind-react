function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}import React from"react";import classnames from"classnames";import{twMerge}from"tailwind-merge";import objectsToString from"../../utils/objectsToString";import{useTheme}from"../../context/theme";import{propTypesDivider,propTypesClassName,propTypesChildren}from"../../types/components/dialog";export var DialogBody=React.forwardRef(function(_param,ref){var divider=_param.divider,className=_param.className,children=_param.children,rest=_objectWithoutProperties(_param,["divider","className","children"]);var dialogBody=useTheme().dialogBody;var defaultProps=dialogBody.defaultProps,base=dialogBody.styles.base;className=twMerge(defaultProps.className||"",className);var dialogBodyClasses=twMerge(classnames(objectsToString(base.initial),_defineProperty({},objectsToString(base.divider),divider)),className);return React.createElement("div",_extends({},rest,{ref:ref,className:dialogBodyClasses}),children)});DialogBody.propTypes={divider:propTypesDivider,className:propTypesClassName,children:propTypesChildren};DialogBody.displayName="MaterialTailwind.DialogBody";export default DialogBody;
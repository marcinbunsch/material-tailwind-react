function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}import React from"react";import{m,domAnimation,LazyMotion}from"framer-motion";import classnames from"classnames";import merge from"deepmerge";import objectsToString from"../../utils/objectsToString";import{twMerge}from"tailwind-merge";import{useAccordion}from"./AccordionContext";import{useTheme}from"../../context/theme";import{propTypesClassName,propTypesChildren}from"../../types/components/accordion";export var AccordionBody=React.forwardRef(function(_param,ref){var className=_param.className,children=_param.children,rest=_objectWithoutProperties(_param,["className","children"]);var _useAccordion=useAccordion(),open=_useAccordion.open,animate=_useAccordion.animate;var accordion=useTheme().accordion;var base=accordion.styles.base;className=className!==null&&className!==void 0?className:"";var bodyClasses=twMerge(classnames(objectsToString(base.body)),className);var heightAnimation={unmount:{height:"0px",transition:{duration:.2}},mount:{height:"auto",transition:{duration:.2}}};var mainAnimation={unmount:{transition:{duration:.3,ease:"linear"}},mount:{transition:{duration:.3,ease:"linear"}}};var appliedAnimation=merge(heightAnimation,animate);return React.createElement(LazyMotion,{features:domAnimation},React.createElement(m.div,{className:"overflow-hidden",initial:"unmount",exit:"unmount",animate:open?"mount":"unmount",variants:appliedAnimation},React.createElement(m.div,_extends({},rest,{ref:ref,className:bodyClasses,initial:"unmount",exit:"unmount",animate:open?"mount":"unmount",variants:mainAnimation}),children)))});AccordionBody.propTypes={className:propTypesClassName,children:propTypesChildren};AccordionBody.displayName="MaterialTailwind.AccordionBody";export default AccordionBody;
function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}import React from"react";import PropTypes from"prop-types";import{AnimatePresence,m,domAnimation,LazyMotion}from"framer-motion";import classnames from"classnames";import merge from"deepmerge";import{twMerge}from"tailwind-merge";import findMatch from"../../utils/findMatch";import objectsToString from"../../utils/objectsToString";import{useTheme}from"../../context/theme";import{propTypesVariant,propTypesColor,propTypesIcon,propTypesOpen,propTypesAction,propTypesAnimate,propTypesClassName,propTypesChildren,propTypesOnClose}from"../../types/components/alert";import IconButton from"../IconButton";export var Alert=React.forwardRef(function(_param,ref){var variant=_param.variant,color=_param.color,icon=_param.icon,open=_param.open,action=_param.action,onClose=_param.onClose,animate=_param.animate,className=_param.className,children=_param.children,rest=_objectWithoutProperties(_param,["variant","color","icon","open","action","onClose","animate","className","children"]);var alert=useTheme().alert;var defaultProps=alert.defaultProps,valid=alert.valid,styles=alert.styles;var base=styles.base,variants=styles.variants;variant=variant!==null&&variant!==void 0?variant:defaultProps.variant;color=color!==null&&color!==void 0?color:defaultProps.color;animate=animate!==null&&animate!==void 0?animate:defaultProps.animate;open=open!==null&&open!==void 0?open:defaultProps.open;action=action!==null&&action!==void 0?action:defaultProps.action;onClose=onClose!==null&&onClose!==void 0?onClose:defaultProps.onClose;className=twMerge(defaultProps.className||"",className);var alertBase=objectsToString(base.alert);var alertAction=objectsToString(base.action);var alertVariant=objectsToString(variants[findMatch(valid.variants,variant,"filled")][findMatch(valid.colors,color,"gray")]);var classes=twMerge(classnames(alertBase,alertVariant),className);var actionClasses=classnames(alertAction);var mainAnimation={unmount:{opacity:0},mount:{opacity:1}};var appliedAnimation=merge(mainAnimation,animate);var iconTemplate=React.createElement("div",{className:"shrink-0"},icon);var NewAnimatePresence=AnimatePresence;return React.createElement(LazyMotion,{features:domAnimation},React.createElement(NewAnimatePresence,null,open&&React.createElement(m.div,_extends({},rest,{ref:ref,role:"alert",className:"".concat(classes," flex"),initial:"unmount",exit:"unmount",animate:open?"mount":"unmount",variants:appliedAnimation}),icon&&iconTemplate,React.createElement("div",{className:"".concat(icon?"ml-3":""," mr-12")},children),onClose&&!action&&React.createElement(IconButton,{onClick:onClose,size:"sm",variant:"text",color:variant==="outlined"||variant==="ghost"?color:"white",className:actionClasses},React.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24",stroke:"currentColor",className:"h-6 w-6",strokeWidth:2},React.createElement("path",{strokeLinecap:"round",strokeLinejoin:"round",d:"M6 18L18 6M6 6l12 12"}))),action||null)))});Alert.propTypes={variant:PropTypes.oneOf(propTypesVariant),color:PropTypes.oneOf(propTypesColor),icon:propTypesIcon,open:propTypesOpen,action:propTypesAction,onClose:propTypesOnClose,animate:propTypesAnimate,className:propTypesClassName,children:propTypesChildren};Alert.displayName="MaterialTailwind.Alert";export default Alert;
function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}import React from"react";import{AnimatePresence,m,LazyMotion,domAnimation}from"framer-motion";import{useMergeRefs}from"@floating-ui/react";import merge from"deepmerge";import classnames from"classnames";import{twMerge}from"tailwind-merge";import objectsToString from"../../utils/objectsToString";import{useTheme}from"../../context/theme";import{propTypesAnimate}from"../../types/components/collapse";import{propTypesOpen,propTypesClassName,propTypesChildren}from"../../types/components/collapse";export var Collapse=React.forwardRef(function(_param,ref){var open=_param.open,animate=_param.animate,className=_param.className,children=_param.children,rest=_objectWithoutProperties(_param,["open","animate","className","children"]);var mobileNavRef=React.useRef(null);var collapse=useTheme().collapse;var styles=collapse.styles;var base=styles.base;animate=animate!==null&&animate!==void 0?animate:{};className=className!==null&&className!==void 0?className:"";var classes=twMerge(classnames(objectsToString(base)),className);var mainAnimation={unmount:{height:"0px",transition:{duration:.3}},mount:{height:"auto",transition:{duration:.3}}};var appliedAnimation=merge(mainAnimation,animate);var NewAnimatePresence=AnimatePresence;var mergedRef=useMergeRefs([ref,mobileNavRef]);return React.createElement(LazyMotion,{features:domAnimation},React.createElement(NewAnimatePresence,null,React.createElement(m.div,_extends({},rest,{ref:mergedRef,className:classes,initial:"unmount",exit:"unmount",animate:open?"mount":"unmount",variants:appliedAnimation}),children)))});Collapse.displayName="MaterialTailwind.Collapse";Collapse.propTypes={open:propTypesOpen,animate:propTypesAnimate,className:propTypesClassName,children:propTypesChildren};export default Collapse;
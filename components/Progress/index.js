function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}import React from"react";import PropTypes from"prop-types";import classnames from"classnames";import{twMerge}from"tailwind-merge";import findMatch from"../../utils/findMatch";import objectsToString from"../../utils/objectsToString";import{useTheme}from"../../context/theme";import{propTypesVariant,propTypesColor,propTypesSize,propTypesValue,propTypesLabel,propTypesBarProps,propTypesClassName}from"../../types/components/progress";export var Progress=React.forwardRef(function(_param,ref){var variant=_param.variant,color=_param.color,size=_param.size,value=_param.value,label=_param.label,className=_param.className,barProps=_param.barProps,rest=_objectWithoutProperties(_param,["variant","color","size","value","label","className","barProps"]);var progress=useTheme().progress;var defaultProps=progress.defaultProps,valid=progress.valid,styles=progress.styles;var base=styles.base,variants=styles.variants,sizes=styles.sizes;variant=variant!==null&&variant!==void 0?variant:defaultProps.variant;color=color!==null&&color!==void 0?color:defaultProps.color;size=size!==null&&size!==void 0?size:defaultProps.size;label=label!==null&&label!==void 0?label:defaultProps.label;barProps=barProps!==null&&barProps!==void 0?barProps:defaultProps.barProps;className=twMerge(defaultProps.className||"",className);var progressVariant=objectsToString(variants[findMatch(valid.variants,variant,"filled")][findMatch(valid.colors,color,"gray")]);var progressContainerSize=objectsToString(sizes[findMatch(valid.sizes,size,"md")]["container"]["initial"]);var progressContainer=classnames(objectsToString(base.container.initial),progressContainerSize);var progressWithLabelSize=objectsToString(sizes[findMatch(valid.sizes,size,"md")]["container"]["withLabel"]);var progressWithLabel=classnames(objectsToString(base.container.withLabel),progressWithLabelSize);var progressBarSize=objectsToString(sizes[findMatch(valid.sizes,size,"md")]["bar"]);var progressBar=classnames(objectsToString(base.bar),progressBarSize);var containerClasses=twMerge(classnames(progressContainer,_defineProperty({},progressWithLabel,label)),className);var barClasses=twMerge(classnames(progressBar,progressVariant),barProps===null||barProps===void 0?void 0:barProps.className);return React.createElement("div",_extends({},rest,{ref:ref,className:containerClasses}),React.createElement("div",_extends({},barProps,{className:barClasses,style:{width:"".concat(value,"%")}}),label&&"".concat(value,"% ").concat(typeof label==="string"?label:"")))});Progress.propTypes={variant:PropTypes.oneOf(propTypesVariant),color:PropTypes.oneOf(propTypesColor),size:PropTypes.oneOf(propTypesSize),value:propTypesValue,label:propTypesLabel,barProps:propTypesBarProps,className:propTypesClassName};Progress.displayName="MaterialTailwind.Progress";export default Progress;
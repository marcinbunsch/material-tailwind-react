function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}import React from"react";import PropTypes from"prop-types";import Ripple from"material-ripple-effects";import classnames from"classnames";import{twMerge}from"tailwind-merge";import findMatch from"../../utils/findMatch";import objectsToString from"../../utils/objectsToString";import{useTheme}from"../../context/theme";import{propTypesColor,propTypesLabel,propTypesIcon,propTypesRipple,propTypesClassName,propTypesDisabled,propTypesObject}from"../../types/components/checkbox";export var Checkbox=React.forwardRef(function(_param,ref){var color=_param.color,label=_param.label,icon=_param.icon,ripple=_param.ripple,className=_param.className,disabled=_param.disabled,containerProps=_param.containerProps,labelProps=_param.labelProps,iconProps=_param.iconProps,inputRef=_param.inputRef,rest=_objectWithoutProperties(_param,["color","label","icon","ripple","className","disabled","containerProps","labelProps","iconProps","inputRef"]);var checkbox=useTheme().checkbox;var defaultProps=checkbox.defaultProps,valid=checkbox.valid,styles=checkbox.styles;var base=styles.base,colors=styles.colors;var checkboxId=React.useId();color=color!==null&&color!==void 0?color:defaultProps.color;label=label!==null&&label!==void 0?label:defaultProps.label;icon=icon!==null&&icon!==void 0?icon:defaultProps.icon;ripple=ripple!==null&&ripple!==void 0?ripple:defaultProps.ripple;disabled=disabled!==null&&disabled!==void 0?disabled:defaultProps.disabled;containerProps=containerProps!==null&&containerProps!==void 0?containerProps:defaultProps.containerProps;labelProps=labelProps!==null&&labelProps!==void 0?labelProps:defaultProps.labelProps;iconProps=iconProps!==null&&iconProps!==void 0?iconProps:defaultProps.iconProps;className=twMerge(defaultProps.className||"",className);var rippleEffect=ripple!==undefined&&new Ripple;var rootClasses=classnames(objectsToString(base.root),_defineProperty({},objectsToString(base.disabled),disabled));var containerClasses=twMerge(classnames(objectsToString(base.container)),containerProps===null||containerProps===void 0?void 0:containerProps.className);var inputClasses=twMerge(classnames(objectsToString(base.input),objectsToString(colors[findMatch(valid.colors,color,"gray")])),className);var labelClasses=twMerge(classnames(objectsToString(base.label)),labelProps===null||labelProps===void 0?void 0:labelProps.className);var iconContainerClasses=twMerge(classnames(objectsToString(base.icon)),iconProps===null||iconProps===void 0?void 0:iconProps.className);return React.createElement("div",{ref:ref,className:rootClasses},React.createElement("label",_extends({},containerProps,{className:containerClasses,htmlFor:rest.id||checkboxId,onMouseDown:function(e){var onMouseDown=containerProps===null||containerProps===void 0?void 0:containerProps.onMouseDown;if(ripple){rippleEffect.create(e,"dark")}return typeof onMouseDown==="function"&&onMouseDown(e)}}),React.createElement("input",_extends({},rest,{ref:inputRef,type:"checkbox",disabled:disabled,className:inputClasses,id:rest.id||checkboxId})),React.createElement("span",{className:iconContainerClasses},icon||React.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",className:"h-3.5 w-3.5",viewBox:"0 0 20 20",fill:"currentColor",stroke:"currentColor",strokeWidth:1},React.createElement("path",{fillRule:"evenodd",d:"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z",clipRule:"evenodd"})))),label&&React.createElement("label",_extends({},labelProps,{className:labelClasses,htmlFor:rest.id||checkboxId}),label))});Checkbox.propTypes={color:PropTypes.oneOf(propTypesColor),label:propTypesLabel,icon:propTypesIcon,ripple:propTypesRipple,className:propTypesClassName,disabled:propTypesDisabled,containerProps:propTypesObject,labelProps:propTypesObject};Checkbox.displayName="MaterialTailwind.Checkbox";export default Checkbox;